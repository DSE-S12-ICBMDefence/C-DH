from math import *
import numpy as np

FOV   = 20*pi/180 #rad
Re   = 6371 #km
n_pix = 1000
h = 1000 #km

spot = np.array([0,Re])
theta_0 = 10*pi/180 + pi/2 #rad
# theta_end = -10*pi/180 + pi/2 #rad

# print(thetas*180/pi)



def pixel_det(theta, spot, FOV, h):

    p = np.array([(Re+h)*cos(theta), (Re+h)*sin(theta)])
    # print(p)
    d_x = - p[0] + spot[0]    #y distance between bright and to s/c
    d_y = - p[1] + spot[1]    #x distance between bright and s/c
    # print(d_x,d_y)
    d = sqrt((d_x)**2 + (d_y)**2) #distance between bright and to s/c
    # print(d)
    if d_x > 0:
        mu = acos((d**2 + (Re+h)**2 - Re**2)/(2*d*(Re+h)))
    elif d_x <= 0:
        mu = -acos((d ** 2 + (Re + h) ** 2 - Re ** 2) / (2 * d * (Re + h)))

    return



angle_pix = np.linspace(-FOV/2,FOV/2,n_pix)
print(angle_pix*180/pi)

































































































































































































































































































































































